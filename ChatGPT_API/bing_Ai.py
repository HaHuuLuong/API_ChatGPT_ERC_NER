# Define a function to classify emotion based on keywords
def classify_emotion(text):
    # Define a dictionary of keywords for each emotion
    keywords = {
        "[vui v·∫ª]": ["=))", "üòÇ", "üòä", "üòç", "‚ù§Ô∏è", "ü•∞"],
        "[bu·ªìn ch√°n]": ["üò≠", "üò¢", "ü•≤", "üôÅ", "üòû"],
        "[t·ª©c gi·∫≠n]": ["ü´†", "üëø", "üò°", "ü§¨"],
        "[s·ª£ h√£i]": ["üò±", "üò®", "üò∞"],
        "[ng·∫°c nhi√™n]": ["üòÆ", "üòØ", "ü§Ø"],
        "[khinh th∆∞·ªùng]": ["üôÑ", "üòí"]
    }
    # Loop through each emotion and keyword
    for emotion, words in keywords.items():
        # Check if any keyword is in the text
        if any(word in text for word in words):
            # Return the emotion as the label
            return emotion
    # If no keyword is found, return unknown as the label
    return "[kh√¥ng r√µ]"
    
# Create a list of texts with conversations
texts = [
    "1--> [Qu·ª≥nh Ly-100005561651963] (25/04/2022 9:01:11 am): 2. th·∫ßy Quy·∫øt d·∫≠y th√¨ A ho·∫∑c A+ trong t·∫ßm tay =))))",
    "1--> [ƒê·ª©c B√©o-100003149258548] (25/04/2022 8:35:29 am): 1. H·ªçc m√¥ng lung l·∫Øm e ah. B·ªè ƒëi :)))",
    "2----> [Thanh Th∆∞-100004196402607] (25/04/2022 10:22:12 am): ƒê·ª©c B√©o a v√πi d·∫≠p e th·∫ø",
    # ... add more texts here ...
]

# Loop through each text and apply the function to get the label
for text in texts:
    label = classify_emotion(text)
    print(text, label)